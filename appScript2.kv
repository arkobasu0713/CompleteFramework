#:import Screen kivy.uix.screenmanager

<WelcomeScreen>:
	name: 'WelcomeScreen'
	BoxLayout:
		orientation: 'vertical'

		Label:
			text: 'Welcome to Automated Framework for Software Package Testing'
			bold: True
		GridLayout:
			id: control_buttons_grid_id_WS
			cols: 2
			Button:
				text: 'Enter Framework'
				background_color: (1,1,0,1)
				on_press: root.manager.current = 'ApplicationConsole'
			Button:
				text: 'Quit'
				background_color: (1,0,0,1)
				on_press: root.quit()

<ApplicationControlScreen>:
	name: 'ApplicationConsole'
	BoxLayout:
		orientation: 'vertical'
		Button:
			text: 'Create new software package testing suit'
			background_color: (1,1,0,1)
			on_press: root.manager.current = 'Create'
		Button:
			text: 'Proceed with existing'
			background_color: (1,1,0,1)
			on_press: root.fetchAndChangeScreen()
		Button:
			text: 'Back to Home Screen'
			background_color: (1,0,0,1)
			on_press: root.manager.current = 'WelcomeScreen'
			
<CreateScreen>:
	name: 'Create'
	canvas.before:
		Color:
			rgb: 0,0,.3
		Rectangle:
			pos: self.pos
			size: self.size
	BoxLayout:
		orientation: 'vertical'
		Label:
			id: display_label_id_CS
			text: 'Enter Package Details below'
			bold: True
			color: (1,1,0,1)
			size: self.texture_size
			font_size: 20
			italic: True
			size_hint: (1,.2)
			
		GridLayout:
			id: gridLayout_for_softPackage_detail_id_CS
			cols:2
			row_force_default: True
			row_default_height: 50
			Label:
				text: 'Software Package Name: '
				color: (1,1,0,1)
			TextInput:
				id: softPackage_desc_entry_feild_id_CS
			Label:
				text: 'Primary root location for storing scripts: '
				color: (1,1,0,1)
			TextInput:
				id: softPackage_url_repo_entry_feild_id_CS				
			
			
		BoxLayout:
			orientation: 'vertical'
			size_hint: (1,.3)
			BoxLayout:
				orientation: 'horizontal'
				Button:
					text: 'Save to database'
					background_color: (1,0,0,1)
					on_press: root.createEntry()
				Button:
					text: 'Back'
					background_color: (1,0,0,1)
					on_press: root.manager.current = 'ApplicationConsole'


<DisplayPackagesDetailsScreen>:
	name: 'DisplayPackagesDetailsScreen'
	canvas.before:
		Color:
			rgb: 0,0,.3
		Rectangle:
			pos: self.pos
			size: self.size
	BoxLayout:
		id: box_id_DPDS
		orientation: 'vertical'
		Label:
			id: label_id1_DPDS
			multiline: True
			text: 'Commands and Test Suits:'
			size: self.texture_size
			color: (1,1,0,1)
			size_hint: (1,.15)
		BoxLayout:
			orientation: 'vertical'
			Label:
				text: 'Commands: '
				color: (1,1,0,1)
				size_hint: (1,.1)
				halign: 'left'
			GridLayout:
				id: grid_id_commands_DPDS
				cols: 4
				size_hint: (1,.4)
			Label:
				text: 'Custom Test Suits: '
				color: (1,1,0,1)
				size_hint: (1,.1)
				halign: 'left'
			GridLayout:
				id: grid_id_customTestSuit_DPDS
				cols: 4
				size_hint: (1,.4)
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.1)
			Button:
				text: 'Create New Command'
				color: (1,1,0,1)
				on_press: root.addCommand()
			Button: 
				text: 'Edit Commands'
				color: (1,1,0,1)
				on_press: root.goToEditScreen()
			Button:
				id: createTestSuitID
				text: 'Create New Test Suit'
				color: (1,1,0,1)
				font_size: 15
				on_press: root.manager.current = 'CreateNewTestSuitScreen'
			Button: 
				id: editTestSuitID
				text: 'Edit Test Suits'
				color: (1,1,0,1)
				on_press: root.manager.current = 'EditTestSuitScreen'
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.1)
			Label:	
				text: 'Generate Log at: '
				color: (1,1,0,1)
				size_hint: (.3,1)
				allow_copy: True
			TextInput:
				id: id_logpath_DPDS
				size_hint: (.7,1)
							
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.15)
			Label:
				text: 'Generate scripts only.'
				size_hint: (.3,1)
				color: (1,1,0,1)
			CheckBox:
				id: id_checkBox_DPDS
				on_active: root.setTrueAll()
				size_hint: (.15,1)
			Button:
				id: button_id2_DPDS
				text: 'Run selected commands.'
				size_hint: (.4,1)
				on_press: root.runCommandSuits()
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.15)
			Button:
				id: button_id4_DPDS
				background_color: (1,0,0,1)
				text: 'Map Network Drive'
				on_press: 
					if root.mapDriveAt == '': root.mapDrive()
					else: print("Drive already mapped")
						
			Button:
				id: button_id3_DPDS
				background_color: (1,0,0,1)
				text: 'Create a new Test Folder in mapped Network Drive'
				on_press: root.createFolder()
			
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.15)
			Button:
				text: 'Refresh Contents'
				background_color: (1,0,0,1)
				on_press: root.refreshContents()
			Button:
				id: button_id1_DPDS
				text: 'Back'
				background_color: (1,0,0,1)
				on_press: root.manager.current = 'DisplayResultsScreen'
				on_press: root.callback()


<DisplayResultsScreen>:
	name: 'DisplayResultsScreen'
	canvas.before:
		Color:
			rgb: 0,0,.3
		Rectangle:
			pos: self.pos
			size: self.size
	BoxLayout:
		id: box_id_DRS
		orientation: 'vertical'
		Label:
			text: 'The following software packages were found. Click on the one you wish to proceed with.'
			color: (1,1,0,1)
			size_hint: (1,.2)
		BoxLayout:
			id: innerBoxForSoftwarePackageButton_id_DRS
			orientation: 'vertical'
			size_hint: (1,.6)
		BoxLayout:
			orientation: 'horizontal'
			Button:
				text: 'Refresh Database'
				on_press: root.refresh()
				background_color: (1,0,0,1)
				size_hint: (1,.2)
			Button:
				text: 'Back'
				background_color: (1,0,0,1)
				on_press: root.manager.current = 'ApplicationConsole'
				size_hint: (1,.2)

<CreateNewTestSuitScreen>:
	name: 'CreateNewTestSuitScreen'
	Label:
		text: 'This is the new test suit creating screen'
		color: (1,1,0,1)
	Button:
		text: 'Back'
		background_color: (1,0,0,1)
		on_press: root.manager.current = 'DisplayPackagesDetailsScreen'
		size_hint: (1,.2)

<EditCommandScreen>:
	name: 'EditCommandScreen'
	canvas.before:
		Color:
			rgb: 0,0,.3
		Rectangle:
			pos: self.pos
			size: self.size
	BoxLayout:
		orientation: 'vertical'
		Label:
			text: 'Commands found for the software package:'
			color: (1,0,0,1)
			bold: True
			size_hint: (1,.1)
		GridLayout:
			id: grid_id_commands_ECS
			cols: 4
			size_hint: (1,.3)
		BoxLayout:
			id: boxToDisplayArgumentDetailsID
			orientation: 'vertical'
			size_hint: (1,.3)

		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.15)
			Button:
				id: deleteButtonID
				text: 'Delete'
				background_color: (1,0,0,1)
				on_press: root.delete()
			GridLayout:
				id: gridForControlButtonsOfArgID
				cols: 3
				rows: 2
				Button:
					id: displayArgumentID
					text: 'Query Arguments'
					background_color: (1,0,0,1)
					on_press: root.query()
				Button:
					id: diplayArgDetailButtonID
					text: 'Display Arg Detail'
					background_color: (1,0,0,1)
					on_press: root.displayDetail()
				Button:
					id: addArgumentButtonID
					text: 'Add Argument'
					background_color: (1,0,0,1)
					on_press: root.addArgument()
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1,.15)
			Button:
				text: "Refresh Contents"
				background_color: (1,0,0,1)					
				on_press: root.refreshContents()
			Button:
				text: 'Back'
				background_color: (1,0,0,1)
				on_press: 
					root.manager.current = 'DisplayPackagesDetailsScreen'

<EditTestSuitScreen>:
	name: 'EditTestSuitScreen'
	Label:
		text: 'This is test suit editting screen'
		color: (1,1,0,1)
	Button:
		text: 'Back'
		background_color: (1,0,0,1)
		on_press: root.manager.current = 'DisplayPackagesDetailsScreen'
		size_hint: (1,.2)
	

